@page "/TravelAgents/List"
@inject HttpClient http
@inject IToastService toastService
<div class="row">
    <div class="col-12">
        <h3>Travel Agents</h3>
        <div class="d-flex justify-content-end mb-1">
            <a class="btn btn-primary btn-sm" href="/TravelAgents/Create">Create New</a>
        </div>
        @if (travelagents is null)
        {
            <div>Loading..</div>
        }
        else
        {
            <table class="table table-bordered">
                <thead class="table-light">
                    <tr>
                        <th>AgentName</th>
                        <th>Email</th>
                        <th>AgentAddress</th>
                        <th></th>
                        <th>...</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var t in travelagents)
                    {
                        <tr>
                            <td>@t.AgentName</td>
                            <td>@t.Email</td>
                            <td>@t.AgentAddress</td>
                            <td>
                                <a class="btn btn-link" href="/Travelagents/Details/@t.TravelAgentId">Details</a>
                            </td>
                            <td>

                                <a class="btn btn-primary btn-sm" href="/Travelagents/Edit/@t.TravelAgentId">Edit</a>
                                <button @onclick="@( ()=>Delete(t.TravelAgentId))" class="btn btn-danger btn-sm"><i class="bi bi-trash"></i></button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    private TravelAgentDTO[]? travelagents;
    protected override async Task OnInitializedAsync()
    {
        travelagents = await http.GetFromJsonAsync<TravelAgentDTO[]>("api/TravelAgents/DTO");
    }
    private async Task Delete(int id)
    {
        var response = await http.DeleteAsync($"api/TravelAgents/{id}");
        if (response.IsSuccessStatusCode)
        {
            toastService.ShowSuccess("Data deleted successfully", "Success");
            travelagents = await http.GetFromJsonAsync<TravelAgentDTO[]>("api/TravelAgents");
        }
        else
        {
            toastService.ShowError("Failed to delete data.", "Error");
        }
    }
}

